{"title":"Julia Quick Start","markdown":{"yaml":{"title":"Julia Quick Start","format":{"html":{"toc":false,"embed-resources":false}}},"headingText":"Install Visual Studio Code (VS Code)","containsRefs":false,"markdown":"\n\nDownload Julia here: [https://julialang.org/downloads/](https://julialang.org/downloads/)\n\nOpen the Julia application. You should see a startup banner similar to this:\n\n```text\n               _\n   _       _ _(_)_     |  Documentation: https://docs.julialang.org\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version x.y.z (YYYY-MM-DD)\n _/ |\\__'_|_|_|\\__'_|  |  Official https://julialang.org/ release\n|__/                   |\n\njulia>\n```\n*Try typing in 2+2 and hitting enter. If you know LaTeX, Julia is happy to think about LaTeX commands, so try typing in \\pi whcih turns into π and hitting enter*\n\n\n*After* confirming Julia runs, download and install VS Code: [https://code.visualstudio.com/](https://code.visualstudio.com/)\n\n*   Open VS Code.\n*   Click on the **Extensions** icon in the Activity Bar on the side of the window. It looks like four squares forming a larger square, with the top-right square slightly detached.\n*   Search for \"Julia\" in the search bar.\n*   Find the extension named **Julia** published by `julialang` and click **Install**.\n\n## Create and Run Your First Julia File\n\n*   Create a new file named `HelloJulia.jl`.\n*   Open this file in VS Code.\n*   Paste the following code into the file:\n\n```julia\nprintln(\"The first digits of pi are: \", pi)\n```\n\n*   Run the code by clicking the **Run** button (a trinagluar play icon) in the top-right corner of the editor.\n\n\n# Manage Julia Packages\n\nIn the VS Code terminal panel where you saw the output, you should see the Julia prompt `julia>`. Press the `]` key (right square bracket). The prompt will change to indicate you are in package mode. To exit `Pkg` mode and return to the standard `julia>` prompt, press the `Backspace` key.\n\nWhile in `Pkg` mode, type the following command and press Enter:\n\n```julia\nadd GLMakie CairoMakie DataFrames\n```\n\nThen wait for installation, this can take awhile.\n\n\n## Graph some data\n\nNow you can modify your `HelloJulia.jl` script (or create a new one) to use these packages. Here's an example that creates a simple plot using Makie and saves it as a PDF:\n\n```{julia}\nusing GLMakie, DataFrames #using GLMakie, CairoMakie, \n\n# Activate CairoMakie for saving vector graphics like PDF\nGLMakie.activate!() #CairoMakie.activate!()\n\n# Create some sample data\nx = 0:0.1:2pi\ny_sin = sin.(x)\ny_cos = cos.(x)\n\n# Create a DataFrame (optional, but useful to show now rather that later)\ndf = DataFrame(X=x, SinY=y_sin, CosY=y_cos)\n\n# Create the plot figure and axis\nfig1 = Figure(size = (400, 400))\nax = Axis(fig1[1, 1], xlabel = \"X [um]\", ylabel = \"Y [Pa]\",\n          title = \"Sine and Cosine Waves\")\n\n# Plot the lines\nlines!(ax, df.X, df.SinY, label = \"sin(x)\", color = :blue, linewidth = 2)\nlines!(ax, df.X, df.CosY, label = \"cos(x)\", color = :red, linewidth = 2)\n\naxislegend(ax) # Add a legend\n\n# Show the plot in an interactive window (uses GLMakie backend)\n# GLMakie.activate!() # GLMakie is often the default interactive backend\n#display(fig) # Or just `fig` as the last line in a Quarto cell\n\n# Save the plot as a PDF (uses CairoMakie backend)\n# Ensure CairoMakie is active if you uncomment this\n# CairoMakie.activate!()\n# save(\"plot.pdf\", fig) # This would save to the current directory (tutorials/)\nfig1\n```\n\n\n## WGLMakie Plots\n\nHere is a fancier bit of code to make a 3D plot:\n\n```{julia}\n#| label: fig-makie\n#| fig-cap: \"A Makie Plot\"\n\nusing WGLMakie\nusing JSServe # JSServe is a dependency of WGLMakie, but explicit import is fine\n\nWGLMakie.activate!()\nx = y = z = 1..10\nx_r = y_r = z_r = 1:10\nf(ix, iy, iz) = ix^2 + iy^2 + iz^2\nvol = [f(ix, iy, iz) for ix in x_r, iy in y_r, iz in z_r]\nfig_contour = Figure(size = (400,400)) # Renamed variable\nax_contour = Axis3(fig_contour[1,1]; perspectiveness = 0.5, azimuth = 2.19,\n    elevation = 0.57, aspect = (1, 1, 1))\ncontour!(ax_contour, x, y, z, vol; levels = 10, colormap = :Egypt, transparency = true)\n\nfig_contour # Return the figure object directly\n```\n\n```{julia}\n#| label: fig-interactive-plot\n#| fig-cap: \"Interactive WGLMakie Plot\"\n#| warning: false\nusing WGLMakie\nusing JSServe\n# using Markdown # Not needed if not explicitly using JSServe.App/Page\nWGLMakie.activate!()\n# set_theme!(theme_light()) # Optional\n\n# Sample data\ncategories = [\"A\", \"B\", \"C\", \"D\", \"E\"]\nvalues = [10, 20, 15, 25, 30]\ncolors = [:red, :blue, :green, :yellow, :purple]\n\n# Create the figure\nfig_bar = Figure(size = (600, 400)) # Renamed variable\nax_bar = Axis(fig_bar[1, 1], title = \"Interactive Bar Chart\")\nbarplot!(ax_bar, 1:length(categories), values, color = colors)\nax_bar.xticks = (1:length(categories), categories)\n\nfig_bar # Return the figure object directly\n```","srcMarkdownNoYaml":"\n\nDownload Julia here: [https://julialang.org/downloads/](https://julialang.org/downloads/)\n\nOpen the Julia application. You should see a startup banner similar to this:\n\n```text\n               _\n   _       _ _(_)_     |  Documentation: https://docs.julialang.org\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version x.y.z (YYYY-MM-DD)\n _/ |\\__'_|_|_|\\__'_|  |  Official https://julialang.org/ release\n|__/                   |\n\njulia>\n```\n*Try typing in 2+2 and hitting enter. If you know LaTeX, Julia is happy to think about LaTeX commands, so try typing in \\pi whcih turns into π and hitting enter*\n\n## Install Visual Studio Code (VS Code)\n\n*After* confirming Julia runs, download and install VS Code: [https://code.visualstudio.com/](https://code.visualstudio.com/)\n\n*   Open VS Code.\n*   Click on the **Extensions** icon in the Activity Bar on the side of the window. It looks like four squares forming a larger square, with the top-right square slightly detached.\n*   Search for \"Julia\" in the search bar.\n*   Find the extension named **Julia** published by `julialang` and click **Install**.\n\n## Create and Run Your First Julia File\n\n*   Create a new file named `HelloJulia.jl`.\n*   Open this file in VS Code.\n*   Paste the following code into the file:\n\n```julia\nprintln(\"The first digits of pi are: \", pi)\n```\n\n*   Run the code by clicking the **Run** button (a trinagluar play icon) in the top-right corner of the editor.\n\n\n# Manage Julia Packages\n\nIn the VS Code terminal panel where you saw the output, you should see the Julia prompt `julia>`. Press the `]` key (right square bracket). The prompt will change to indicate you are in package mode. To exit `Pkg` mode and return to the standard `julia>` prompt, press the `Backspace` key.\n\nWhile in `Pkg` mode, type the following command and press Enter:\n\n```julia\nadd GLMakie CairoMakie DataFrames\n```\n\nThen wait for installation, this can take awhile.\n\n\n## Graph some data\n\nNow you can modify your `HelloJulia.jl` script (or create a new one) to use these packages. Here's an example that creates a simple plot using Makie and saves it as a PDF:\n\n```{julia}\nusing GLMakie, DataFrames #using GLMakie, CairoMakie, \n\n# Activate CairoMakie for saving vector graphics like PDF\nGLMakie.activate!() #CairoMakie.activate!()\n\n# Create some sample data\nx = 0:0.1:2pi\ny_sin = sin.(x)\ny_cos = cos.(x)\n\n# Create a DataFrame (optional, but useful to show now rather that later)\ndf = DataFrame(X=x, SinY=y_sin, CosY=y_cos)\n\n# Create the plot figure and axis\nfig1 = Figure(size = (400, 400))\nax = Axis(fig1[1, 1], xlabel = \"X [um]\", ylabel = \"Y [Pa]\",\n          title = \"Sine and Cosine Waves\")\n\n# Plot the lines\nlines!(ax, df.X, df.SinY, label = \"sin(x)\", color = :blue, linewidth = 2)\nlines!(ax, df.X, df.CosY, label = \"cos(x)\", color = :red, linewidth = 2)\n\naxislegend(ax) # Add a legend\n\n# Show the plot in an interactive window (uses GLMakie backend)\n# GLMakie.activate!() # GLMakie is often the default interactive backend\n#display(fig) # Or just `fig` as the last line in a Quarto cell\n\n# Save the plot as a PDF (uses CairoMakie backend)\n# Ensure CairoMakie is active if you uncomment this\n# CairoMakie.activate!()\n# save(\"plot.pdf\", fig) # This would save to the current directory (tutorials/)\nfig1\n```\n\n\n## WGLMakie Plots\n\nHere is a fancier bit of code to make a 3D plot:\n\n```{julia}\n#| label: fig-makie\n#| fig-cap: \"A Makie Plot\"\n\nusing WGLMakie\nusing JSServe # JSServe is a dependency of WGLMakie, but explicit import is fine\n\nWGLMakie.activate!()\nx = y = z = 1..10\nx_r = y_r = z_r = 1:10\nf(ix, iy, iz) = ix^2 + iy^2 + iz^2\nvol = [f(ix, iy, iz) for ix in x_r, iy in y_r, iz in z_r]\nfig_contour = Figure(size = (400,400)) # Renamed variable\nax_contour = Axis3(fig_contour[1,1]; perspectiveness = 0.5, azimuth = 2.19,\n    elevation = 0.57, aspect = (1, 1, 1))\ncontour!(ax_contour, x, y, z, vol; levels = 10, colormap = :Egypt, transparency = true)\n\nfig_contour # Return the figure object directly\n```\n\n```{julia}\n#| label: fig-interactive-plot\n#| fig-cap: \"Interactive WGLMakie Plot\"\n#| warning: false\nusing WGLMakie\nusing JSServe\n# using Markdown # Not needed if not explicitly using JSServe.App/Page\nWGLMakie.activate!()\n# set_theme!(theme_light()) # Optional\n\n# Sample data\ncategories = [\"A\", \"B\", \"C\", \"D\", \"E\"]\nvalues = [10, 20, 15, 25, 30]\ncolors = [:red, :blue, :green, :yellow, :purple]\n\n# Create the figure\nfig_bar = Figure(size = (600, 400)) # Renamed variable\nax_bar = Axis(fig_bar[1, 1], title = \"Interactive Bar Chart\")\nbarplot!(ax_bar, 1:length(categories), values, color = colors)\nax_bar.xticks = (1:length(categories), categories)\n\nfig_bar # Return the figure object directly\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"julia"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":false,"embed-resources":false,"output-file":"install_julia.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.30","engines":["julia"],"theme":["cosmo"],"title":"Julia Quick Start"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}